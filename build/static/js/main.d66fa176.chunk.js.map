{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","components/common/listGroup.jsx","services/authService.js","components/common/like.jsx","components/common/tableBody.jsx","components/common/tableHeader.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/navbar.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","components/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","Sentry","dsn","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","movieUrl","id","concat","getMovie","movieId","http","saveMovie","movie","_id","body","Object","objectSpread","getGenres","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","react_default","a","createElement","className","key","onClick","map","page","ListGroup","genres","textProperty","valueProperty","selectedItem","item","style","cursor","onItemSelect","tokenKey","_callee","email","password","_ref","regenerator_default","wrap","_context","prev","next","sent","data","localStorage","setItem","stop","this","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","Like","heartClassName","likeData","liked","aria-hidden","onLike","TableBody","renderCell","column","content","path","createKey","_this2","_this$props","columns","Component","TableHeader","raiseSort","sortColumn","_this","order","onSort","renderSortIcon","label","Table","tableHeader","tableBody","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Link","to","title","like","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","t0","handleAdd","handleLike","_callee2","index","_context2","toConsumableArray","indexOf","mapToViewModel","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","_this$state","allMovies","filtered","toLowerCase","startsWith","items","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","genreId","numberInStock","dailyRentalRate","_this$state2","_this$getPagedData","listGroup","marginBottom","pathname","searchBox","moviesTable","pagination","defaultProps","NavBar","NavLink","Fragment","Customers","Rentals","NotFound","Input","rest","objectWithoutProperties","htmlFor","assign","autoFocus","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","common_select","common_input","MovieForm","likeOptions","string","required","number","min","max","boolean","history","match","params","_context3","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","React","createRef","location","window","from","Redirect","RegisterForm","minDomainAtoms","alphanum","ProtectedRoute","component","render","Route","Logout","App","lib","navbar","Switch","protectedRoute","components_movies","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d66fa176.chunk.js","sourcesContent":["import * as Sentry from \"@sentry/browser\";\n\nfunction init() {\n  Sentry.init({\n    dsn: \"https://79034ed53c324e509970e4e8a3edfb34@sentry.io/1381932\"\n  });\n}\n\nfunction log(error) {\n  console.log(\"error\");\n  Sentry.captureMessage(\"HET says:\" + error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import http from \"./httpService\";\n//import { saveMovie } from \"./fakeMovieService\";\n\nconst apiEndpoint = \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function deleteMovie(movieId) {\n  http.delete(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  //update\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    console.log(\"ms:\" + movie);\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  //create\n  return http.post(apiEndpoint, movie);\n}\n","import http from \"./httpService\";\n\nexport function getGenres() {\n  return http.get(\"/genres\");\n}\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = props => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  //const test2 = [...Array(n).keys()];\n  // [1... pagesCount].map()\n  return (\n    <div>\n      <nav>\n        <ul className=\"pagination\">\n          <li key={\"prev\"} className=\"page-item\">\n            <a\n              className=\"page-link\"\n              onClick={() => {\n                if (currentPage === 1) {\n                  onPageChange(currentPage);\n                } else {\n                  onPageChange(currentPage - 1);\n                }\n              }}\n            >\n              {\"Previous\"}\n            </a>\n          </li>\n          {pages.map(page => (\n            <li\n              key={page}\n              className={\n                page === currentPage ? \"page-item active\" : \"page-item\"\n              }\n            >\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\n                {page}\n              </a>\n            </li>\n          ))}\n          <li key={\"next\"} className=\"page-item\">\n            <a\n              className=\"page-link\"\n              onClick={() => {\n                if (currentPage === pagesCount) {\n                  onPageChange(currentPage);\n                } else {\n                  onPageChange(currentPage + 1);\n                }\n              }}\n            >\n              {\" Next\"}\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst ListGroup = props => {\n  const { genres, textProperty, valueProperty, selectedItem } = props;\n  const className = \"list-group-item list-group-item-action\";\n  return (\n    <ul className=\"list-group\">\n      {genres.map(item => (\n        <li\n          className={item === selectedItem ? className + \" active\" : className}\n          style={{ cursor: \"pointer\" }}\n          key={item[valueProperty]}\n          onClick={() => props.onItemSelect(item)}\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListGroup;\n","import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\n//import { saveMovie } from \"./fakeMovieService\";\n\nconst apiEndpoint = \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};\n","import React, { Component } from \"react\";\n\n// INput: liked: bolean\n// Output: onClick\n\nconst Like = props => {\n  let heartClassName = \"fa fa-heart\";\n  if (!props.likeData.liked) heartClassName = heartClassName + \"-o\";\n  return (\n    <i\n      className={heartClassName}\n      aria-hidden=\"true\"\n      style={{ cursor: \"pointer\" }}\n      onClick={props.onLike}\n    />\n  );\n};\n\n// class Like extends Component {\n//   render() {\n//     let heartClassName = \"fa fa-heart\";\n//     if (!this.props.likeData.liked) heartClassName = heartClassName + \"-o\";\n//     return (\n//       <i\n//         className={heartClassName}\n//         aria-hidden=\"true\"\n//         style={{ cursor: \"pointer\" }}\n//         onClick={this.props.onLike}\n//       />\n//     );\n//   }\n// }\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) {\n      return column.content(item);\n    } else {\n      return _.get(item, column.path);\n    }\n  };\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React from \"react\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  /* \nconst Table = props => {\n  const { columns, sortColumn, onSort, data } = props;\n*/\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport auth from \"../services/authService\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport { Link } from \"react-router-dom\";\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Like likeData={movie} onLike={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: movie => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    )\n  };\n\n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\n  }\n\n  render() {\n    const { movies, sortColumn, onSort } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { getMovies, deleteMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport SearchBox from \"./common/searchBox\";\nimport { toast } from \"react-toastify\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies }); //same as this.setState({ movies:movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"this movie has already been deleted.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleAdd = () => {\n    console.log(\"Added\");\n  };\n\n  mapToViewModel(movie) {\n    console.log(\"movie:\" + movie);\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n      liked: movie.liked\n    };\n  }\n\n  handleLike = async movie => {\n    //console.log(movie);\n    const originalMovies = this.state.movies;\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n\n    try {\n      await saveMovie(this.mapToViewModel(movies[index]));\n    } catch (ex) {\n      toast.error(ex);\n      this.setState({ originalMovies });\n    }\n  };\n\n  handlePageChange = page => {\n    //console.log(page);\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    //console.log(genre);\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies; //rename length as count\n    //const count = this.state.movies.length;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <ListGroup\n            genres={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n              to={{\n                pathname: \"/movies/new\",\n                state: { genres: this.state.genres }\n              }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database </p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onDelete={this.handleDelete}\n            onLike={this.handleLike}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default Movies;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nconst NavBar = ({ user }) => {\n  //props.user\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        MovieBox\n      </Link>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className={\"nav-item nav-link\" + \"\"} to=\"/movies\">\n            Movies <span className=\"sr-only\">(current)</span>\n          </NavLink>\n          <NavLink className={\"nav-item nav-link\" + \"\"} to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className={\"nav-item nav-link\" + \"\"} to=\"/rentals\">\n            Rentals\n          </NavLink>\n          {!user && (\n            <React.Fragment>\n              <NavLink className={\"nav-item nav-link\" + \"\"} to=\"/login\">\n                Login\n              </NavLink>\n              <NavLink className={\"nav-item nav-link\" + \"\"} to=\"/register\">\n                Register\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className={\"nav-item nav-link\" + \"\"} to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className={\"nav-item nav-link\" + \"\"} to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\n// class Customers extends Component {\n//   render() {\n//     return \"Customers\";\n//   }\n// }\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\nimport { Component } from \"react\";\n\nclass Rentals extends Component {\n  render() {\n    return <h1>Rentals</h1>;\n  }\n}\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n\n//we dont need state so we create functional component inside of controller component\n\nconst Input = ({ name, label, error, ...rest }) => {\n  //aynı olanlar yerine ...rest yazdım  ({ type, name, label, value, error, onChange })\n  return (\n    <div className=\"from-group\">\n      <label htmlFor={name}>{label}</label>\n      <div>\n        <input\n          autoFocus\n          //value={value}\n          //onChange={onChange}\n          //type={type}\n          name={name}\n          {...rest}\n          id={name}\n          className=\"fom-control\"\n        />\n      </div>\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const error = Joi.validate(this.state.data, this.schema, options);\n    if (!error.error) return null;\n\n    const errors = {};\n    for (let item of error.error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    // handleChange = (e) =>\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value; //e.currentTarget.name\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport { getGenres } from \"../services/genreService\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n      liked: false\n    },\n    genres: [],\n    likeOptions: [{ name: \"true\", _id: true }, { name: \"false\", _id: false }],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\"),\n    liked: Joi.boolean().required()\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres(); //data.genres\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    //i divide it in two function to tell a stroy of componentdidmounth\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    console.log(\"movie:\" + movie);\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n      liked: movie.liked == undefined ? false : movie.liked\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    //console.log(match);\n    //console.log(history);\n    // let handleSave = () => {\n    //   history.push(\"/movies\");\n    // };\n\n    return (\n      <div>\n        <h1>movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderSelect(\"liked\", \"Liked\", this.state.likeOptions)}\n          {this.renderInput(\"numberInStock\", \"NumberInStock\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/authService\";\n\nclass LoginForm extends Form {\n  username = React.createRef();\n\n  state = {\n    data: {\n      username: \"\",\n      password: \"\"\n    },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password); //json web token\n\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n      //this.props.history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\n\nconst apiEndpoint = \"/users\";\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name\n  });\n}\n","import React, { Component } from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      name: \"\"\n    },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\")\n      .email({ minDomainAtoms: 2 }),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n      .min(5),\n    name: Joi.string()\n      .alphanum()\n      .min(3)\n      .max(30)\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n      //this.props.history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport auth from \"../../services/authService\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      path={path}\n      {...rest}\n      render={props => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport auth from \"../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/navbar\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport Logout from \"./components/logout\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport authService from \"./services/authService\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <main className=\"container\">\n          <NavBar user={user} />\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            {/* <Route\n              path=\"/movies/:id\"\n              render={props => {\n                if (!user) return <Redirect to=\"/login\" />;\n                return <MovieForm {...props} />;\n              }}\n            /> */}\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}\n            />\n            <ProtectedRoute path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(\"HET\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}